{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2c31ba04",
   "metadata": {
    "toc": true
   },
   "source": [
    "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n",
    "<div class=\"toc\"><ul class=\"toc-item\"></ul></div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "45b75d4c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:24:32.170926Z",
     "start_time": "2021-10-01T06:24:32.153399Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import glob\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "id": "d5722345",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:06:24.713573Z",
     "start_time": "2021-10-03T12:06:22.702822Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CARD_SUBWAY_MONTH_201601.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201602.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201603.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201604.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201605.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201606.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201607.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201608.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201609.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201610.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201611.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201612.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201701.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201702.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201703.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201704.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201705.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201706.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201707.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201708.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201709.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201710.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201711.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201712.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201801.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201802.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201803.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201804.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201805.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201806.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201807.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201808.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201809.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201810.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201811.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201812.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201901.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201902.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201903.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201904.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201905.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201906.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201907.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201908.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201909.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201910.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201911.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_201912.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202001.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202002.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202003.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202004.csv write complete...\n",
      ">>> All file merge complete...\n"
     ]
    }
   ],
   "source": [
    "#16.01~20.04,20.09 데이터 파일 병합하기\n",
    "input_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\'\n",
    "output_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\subway_merge1.csv'\n",
    "file_list = glob.glob(input_path + 'CARD_SUBWAY_MONTH*') #1. merge 대상 파일을 확인 \n",
    "with open(output_path, 'w') as f: #2-1.merge할 파일을 열고 \n",
    "    for file in file_list: \n",
    "        with open(file ,'r') as f2: \n",
    "            while True: \n",
    "                line = f2.readline() #2.merge 대상 파일의 row 1줄을 읽어서 \n",
    "                \n",
    "                if not line: #row가 없으면 해당 csv 파일 읽기 끝 \n",
    "                    break \n",
    "                    \n",
    "                f.write(line) #3.읽은 row 1줄을 merge할 파일에 쓴다. \n",
    "                \n",
    "            file_name = file.split('\\\\')[-1] \n",
    "            print(file.split('\\\\')[-1] + ' write complete...') \n",
    "            print('>>> All file merge complete...')\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "id": "e8349614",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T11:45:31.441381Z",
     "start_time": "2021-10-03T11:45:31.004599Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CARD_SUBWAY_MONTH_202005.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202006.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202007.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202008.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202010.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202011.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202012.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202101.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202102.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202103.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202104.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202105.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202106.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202107.csv write complete...\n",
      ">>> All file merge complete...\n",
      "CARD_SUBWAY_MONTH_202108.csv write complete...\n",
      ">>> All file merge complete...\n"
     ]
    }
   ],
   "source": [
    "#20.06~20.08, 20.10~21.08\n",
    "input_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철2\\\\'\n",
    "output_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철2\\\\subway_merge2.csv'\n",
    "file_list = glob.glob(input_path + 'CARD_SUBWAY_MONTH*') #1. merge 대상 파일을 확인 \n",
    "with open(output_path, 'w', -1, 'utf-8') as f: #2-1.merge할 파일을 열고 \n",
    "    for file in file_list: \n",
    "        with open(file ,'r', -1, 'utf-8') as f2: \n",
    "            while True: \n",
    "                line = f2.readline() #2.merge 대상 파일의 row 1줄을 읽어서 \n",
    "                \n",
    "                if not line: #row가 없으면 해당 csv 파일 읽기 끝 \n",
    "                    break \n",
    "                    \n",
    "                f.write(line) #3.읽은 row 1줄을 merge할 파일에 쓴다. \n",
    "                \n",
    "            file_name = file.split('\\\\')[-1] \n",
    "            print(file.split('\\\\')[-1] + ' write complete...') \n",
    "            print('>>> All file merge complete...')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "id": "5ba1ae54",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:09:44.732231Z",
     "start_time": "2021-10-03T12:09:44.715277Z"
    }
   },
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "an integer is required (got type str)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-381-d38548eb3f39>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutput_path\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'w'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m-\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'utf-8'\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m:\u001b[0m \u001b[1;31m#2-1.merge할 파일을 열고\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mfile\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mfile_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m         \u001b[1;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfile\u001b[0m \u001b[1;33m,\u001b[0m\u001b[1;34m'rt'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'utf8'\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mf2\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m             \u001b[1;32mwhile\u001b[0m \u001b[1;32mTrue\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m                 \u001b[0mline\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mf2\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m#2.merge 대상 파일의 row 1줄을 읽어서\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mTypeError\u001b[0m: an integer is required (got type str)"
     ]
    }
   ],
   "source": [
    "#전체 데이터 파일 병합하기\n",
    "input_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\'\n",
    "output_path = r'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\total_merge.csv'\n",
    "file_list = glob.glob(input_path + 'subway*') #1. merge 대상 파일을 확인 \n",
    "with open(output_path, 'w', -1, 'utf-8') as f: #2-1.merge할 파일을 열고 \n",
    "    for file in file_list: \n",
    "        with open(file ,'rt', 'utf8') as f2: \n",
    "            while True: \n",
    "                line = f2.readline() #2.merge 대상 파일의 row 1줄을 읽어서 \n",
    "                \n",
    "                if not line: #row가 없으면 해당 csv 파일 읽기 끝 \n",
    "                    break \n",
    "                    \n",
    "                f.write(line) #3.읽은 row 1줄을 merge할 파일에 쓴다. \n",
    "                \n",
    "            file_name = file.split('\\\\')[-1] \n",
    "            print(file.split('\\\\')[-1] + ' write complete...') \n",
    "            print('>>> All file merge complete...')\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "id": "392ded40",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T11:51:13.885470Z",
     "start_time": "2021-10-03T11:51:08.147546Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>�������,\"�뼱��\",\"����\",�����ѽ°���,�����ѽ°���,\"�������\"</th>\n",
       "      <th>사용일자,\"노선명\",\"역명\",\"승차총승객수\",\"하차총승객수\",\"등록일자\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101,\"4ȣ��\",\"����\",\"1213.0\",\"1272.0\",\"2016...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101,\"4ȣ��\",\"����\",\"3365.0\",\"3687.0\",\"2016...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101,\"4ȣ��\",\"�ſ��\",\"5746.0\",\"6499.0\",\"2016...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101,\"4ȣ��\",\"�ﰢ��\",\"1733.0\",\"2475.0\",\"2016...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101,\"4ȣ��\",\"�����Ա�\",\"6217.0\",\"5748.0\",\"2...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255259</th>\n",
       "      <td>NaN</td>\n",
       "      <td>20210831,\"5호선\",\"개화산\",\"4889\",\"4725\",\"20210903\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255260</th>\n",
       "      <td>NaN</td>\n",
       "      <td>20210831,\"과천선\",\"선바위\",\"7498\",\"6443\",\"20210903\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255261</th>\n",
       "      <td>NaN</td>\n",
       "      <td>20210831,\"1호선\",\"서울역\",\"35669\",\"33406\",\"20210903...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255262</th>\n",
       "      <td>NaN</td>\n",
       "      <td>20210831,\"1호선\",\"동묘앞\",\"5809\",\"6035\",\"20210903\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255263</th>\n",
       "      <td>NaN</td>\n",
       "      <td>20210831,\"1호선\",\"시청\",\"19444\",\"19266\",\"20210903\",\"\"</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1184825 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       �������,\"�뼱��\",\"����\",�����ѽ°���,�����ѽ°���,\"�������\"  \\\n",
       "0       20160101,\"4ȣ��\",\"����\",\"1213.0\",\"1272.0\",\"2016...      \n",
       "1       20160101,\"4ȣ��\",\"����\",\"3365.0\",\"3687.0\",\"2016...      \n",
       "2       20160101,\"4ȣ��\",\"�ſ��\",\"5746.0\",\"6499.0\",\"2016...      \n",
       "3       20160101,\"4ȣ��\",\"�ﰢ��\",\"1733.0\",\"2475.0\",\"2016...      \n",
       "4       20160101,\"4ȣ��\",\"�����Ա�\",\"6217.0\",\"5748.0\",\"2...      \n",
       "...                                                   ...      \n",
       "255259                                                NaN      \n",
       "255260                                                NaN      \n",
       "255261                                                NaN      \n",
       "255262                                                NaN      \n",
       "255263                                                NaN      \n",
       "\n",
       "                 사용일자,\"노선명\",\"역명\",\"승차총승객수\",\"하차총승객수\",\"등록일자\"  \n",
       "0                                                     NaN  \n",
       "1                                                     NaN  \n",
       "2                                                     NaN  \n",
       "3                                                     NaN  \n",
       "4                                                     NaN  \n",
       "...                                                   ...  \n",
       "255259   20210831,\"5호선\",\"개화산\",\"4889\",\"4725\",\"20210903\",\"\"  \n",
       "255260   20210831,\"과천선\",\"선바위\",\"7498\",\"6443\",\"20210903\",\"\"  \n",
       "255261  20210831,\"1호선\",\"서울역\",\"35669\",\"33406\",\"20210903...  \n",
       "255262   20210831,\"1호선\",\"동묘앞\",\"5809\",\"6035\",\"20210903\",\"\"  \n",
       "255263  20210831,\"1호선\",\"시청\",\"19444\",\"19266\",\"20210903\",\"\"  \n",
       "\n",
       "[1184825 rows x 2 columns]"
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "import glob\n",
    "import pandas as pd\n",
    "os.chdir(\"C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\\")\n",
    "extension = 'csv' #csv로 파일 확장자 지정 \n",
    "all_filenames = [i for i in glob.glob('subway*.{}'.format(extension))]\n",
    "#combine all files in the list\n",
    "combined_csv = pd.concat([pd.read_csv(f, sep='\\t') for f in all_filenames ]) #지정한 파일 경로에 있는 모든 파일 불러오기\n",
    "#export to csv\n",
    "combined_csv.to_csv( \"combined_csv.csv\", index=False, encoding='utf-8-sig')\n",
    "combined_csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "id": "8cf4cf4e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:06:35.095144Z",
     "start_time": "2021-10-03T12:06:33.580162Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>노선명</th>\n",
       "      <th>역명</th>\n",
       "      <th>승차총승객수</th>\n",
       "      <th>하차총승객수</th>\n",
       "      <th>등록일자</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>동작</td>\n",
       "      <td>1213.0</td>\n",
       "      <td>1272.0</td>\n",
       "      <td>20160109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>이촌</td>\n",
       "      <td>3365.0</td>\n",
       "      <td>3687.0</td>\n",
       "      <td>20160109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>신용산</td>\n",
       "      <td>5746.0</td>\n",
       "      <td>6499.0</td>\n",
       "      <td>20160109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>삼각지</td>\n",
       "      <td>1733.0</td>\n",
       "      <td>2475.0</td>\n",
       "      <td>20160109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>숙대입구</td>\n",
       "      <td>6217.0</td>\n",
       "      <td>5748.0</td>\n",
       "      <td>20160109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911673</th>\n",
       "      <td>20200430</td>\n",
       "      <td>7호선</td>\n",
       "      <td>상동</td>\n",
       "      <td>7730.0</td>\n",
       "      <td>7786.0</td>\n",
       "      <td>20200503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911674</th>\n",
       "      <td>20200430</td>\n",
       "      <td>7호선</td>\n",
       "      <td>삼산체육관</td>\n",
       "      <td>2616.0</td>\n",
       "      <td>2286.0</td>\n",
       "      <td>20200503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911675</th>\n",
       "      <td>20200430</td>\n",
       "      <td>7호선</td>\n",
       "      <td>굴포천</td>\n",
       "      <td>4990.0</td>\n",
       "      <td>5027.0</td>\n",
       "      <td>20200503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911676</th>\n",
       "      <td>20200430</td>\n",
       "      <td>7호선</td>\n",
       "      <td>부평구청</td>\n",
       "      <td>5413.0</td>\n",
       "      <td>4684.0</td>\n",
       "      <td>20200503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911677</th>\n",
       "      <td>20200430</td>\n",
       "      <td>8호선</td>\n",
       "      <td>암사</td>\n",
       "      <td>10113.0</td>\n",
       "      <td>8961.0</td>\n",
       "      <td>20200503</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>911678 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            사용일자  노선명     역명   승차총승객수  하차총승객수      등록일자\n",
       "0       20160101  4호선     동작   1213.0  1272.0  20160109\n",
       "1       20160101  4호선     이촌   3365.0  3687.0  20160109\n",
       "2       20160101  4호선    신용산   5746.0  6499.0  20160109\n",
       "3       20160101  4호선    삼각지   1733.0  2475.0  20160109\n",
       "4       20160101  4호선   숙대입구   6217.0  5748.0  20160109\n",
       "...          ...  ...    ...      ...     ...       ...\n",
       "911673  20200430  7호선     상동   7730.0  7786.0  20200503\n",
       "911674  20200430  7호선  삼산체육관   2616.0  2286.0  20200503\n",
       "911675  20200430  7호선    굴포천   4990.0  5027.0  20200503\n",
       "911676  20200430  7호선   부평구청   5413.0  4684.0  20200503\n",
       "911677  20200430  8호선     암사  10113.0  8961.0  20200503\n",
       "\n",
       "[911678 rows x 6 columns]"
      ]
     },
     "execution_count": 375,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#[ error tokenizing data. c error: expected 6 fields in line 911681, saw 7] 오류로, 20.09파일 제외 후 재진행\n",
    "temp1 = pd.read_csv('./subway_merge1.csv', encoding='cp949')\n",
    "temp1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "id": "a4a75748",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:08:08.381807Z",
     "start_time": "2021-10-03T12:08:08.065876Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>노선명</th>\n",
       "      <th>역명</th>\n",
       "      <th>승차총승객수</th>\n",
       "      <th>하차총승객수</th>\n",
       "      <th>등록일자</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20200601</th>\n",
       "      <td>5호선</td>\n",
       "      <td>개화산</td>\n",
       "      <td>5145</td>\n",
       "      <td>4899</td>\n",
       "      <td>20200604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20200601</th>\n",
       "      <td>3호선</td>\n",
       "      <td>불광</td>\n",
       "      <td>15920</td>\n",
       "      <td>17131</td>\n",
       "      <td>20200604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20200601</th>\n",
       "      <td>2호선</td>\n",
       "      <td>신도림</td>\n",
       "      <td>47364</td>\n",
       "      <td>46161</td>\n",
       "      <td>20200604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20200601</th>\n",
       "      <td>3호선</td>\n",
       "      <td>연신내</td>\n",
       "      <td>37604</td>\n",
       "      <td>35416</td>\n",
       "      <td>20200604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20200601</th>\n",
       "      <td>3호선</td>\n",
       "      <td>구파발</td>\n",
       "      <td>20615</td>\n",
       "      <td>19107</td>\n",
       "      <td>20200604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20210831</th>\n",
       "      <td>5호선</td>\n",
       "      <td>개화산</td>\n",
       "      <td>4889</td>\n",
       "      <td>4725</td>\n",
       "      <td>20210903</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20210831</th>\n",
       "      <td>과천선</td>\n",
       "      <td>선바위</td>\n",
       "      <td>7498</td>\n",
       "      <td>6443</td>\n",
       "      <td>20210903</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20210831</th>\n",
       "      <td>1호선</td>\n",
       "      <td>서울역</td>\n",
       "      <td>35669</td>\n",
       "      <td>33406</td>\n",
       "      <td>20210903</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20210831</th>\n",
       "      <td>1호선</td>\n",
       "      <td>동묘앞</td>\n",
       "      <td>5809</td>\n",
       "      <td>6035</td>\n",
       "      <td>20210903</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20210831</th>\n",
       "      <td>1호선</td>\n",
       "      <td>시청</td>\n",
       "      <td>19444</td>\n",
       "      <td>19266</td>\n",
       "      <td>20210903</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>255264 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         사용일자  노선명     역명 승차총승객수    하차총승객수  등록일자\n",
       "20200601  5호선  개화산   5145   4899  20200604   NaN\n",
       "20200601  3호선   불광  15920  17131  20200604   NaN\n",
       "20200601  2호선  신도림  47364  46161  20200604   NaN\n",
       "20200601  3호선  연신내  37604  35416  20200604   NaN\n",
       "20200601  3호선  구파발  20615  19107  20200604   NaN\n",
       "...       ...  ...    ...    ...       ...   ...\n",
       "20210831  5호선  개화산   4889   4725  20210903   NaN\n",
       "20210831  과천선  선바위   7498   6443  20210903   NaN\n",
       "20210831  1호선  서울역  35669  33406  20210903   NaN\n",
       "20210831  1호선  동묘앞   5809   6035  20210903   NaN\n",
       "20210831  1호선   시청  19444  19266  20210903   NaN\n",
       "\n",
       "[255264 rows x 6 columns]"
      ]
     },
     "execution_count": 376,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp2 = pd.read_csv('./subway_merge2.csv')\n",
    "temp2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "79852119",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T11:06:08.665709Z",
     "start_time": "2021-10-03T11:06:01.216185Z"
    }
   },
   "outputs": [
    {
     "ename": "UnicodeEncodeError",
     "evalue": "'cp949' codec can't encode character '\\ufffd' in position 0: illegal multibyte sequence",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mUnicodeEncodeError\u001b[0m                        Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-288-8dc8ef8fe7fa>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[0mdatacombine\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0malldata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mignore_index\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 10\u001b[1;33m \u001b[0mdatacombine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutput_file\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'CP949'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36mto_csv\u001b[1;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, line_terminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)\u001b[0m\n\u001b[0;32m   3385\u001b[0m         )\n\u001b[0;32m   3386\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3387\u001b[1;33m         return DataFrameRenderer(formatter).to_csv(\n\u001b[0m\u001b[0;32m   3388\u001b[0m             \u001b[0mpath_or_buf\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3389\u001b[0m             \u001b[0mline_terminator\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mline_terminator\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\io\\formats\\format.py\u001b[0m in \u001b[0;36mto_csv\u001b[1;34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, line_terminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)\u001b[0m\n\u001b[0;32m   1081\u001b[0m             \u001b[0mformatter\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfmt\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1082\u001b[0m         )\n\u001b[1;32m-> 1083\u001b[1;33m         \u001b[0mcsv_formatter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msave\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1084\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1085\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mcreated_buffer\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36msave\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    246\u001b[0m             )\n\u001b[0;32m    247\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 248\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_save\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    249\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_save\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36m_save\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    250\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_save\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    251\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_need_to_save_header\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 252\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_save_header\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    253\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_save_body\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    254\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36m_save_header\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    255\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_save_header\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    256\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhas_mi_columns\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_has_aliases\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 257\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mwriter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mwriterow\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mencoded_labels\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    258\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    259\u001b[0m             \u001b[1;32mfor\u001b[0m \u001b[0mrow\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_generate_multiindex_header_rows\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mUnicodeEncodeError\u001b[0m: 'cp949' codec can't encode character '\\ufffd' in position 0: illegal multibyte sequence"
     ]
    }
   ],
   "source": [
    "input_file = 'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\'\n",
    "output_file = 'C:\\\\Users\\\\user\\\\OneDrive\\\\Education\\\\Data Science\\\\SSAC\\\\토이프로젝트\\\\지하철\\\\subway_merge2.csv'\n",
    "file_list = glob.glob(os.path.join(input_file, 'CARD_SUBWAY_MONTH*')) #1. merge 대상 파일을 확인 \n",
    "alldata = []\n",
    "for file in file_list: \n",
    "    df = pd.read_csv(file, engine = 'python')   \n",
    "    alldata.append(df)\n",
    "    \n",
    "datacombine = pd.concat(alldata, axis=0, ignore_index=True)\n",
    "datacombine.to_csv(output_file, index=False, encoding='CP949')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "id": "9fe00dbc",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:02:23.191977Z",
     "start_time": "2021-10-03T12:02:21.450973Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자,\"노선명\",\"역명\",승차총승객수,하차총승객수,\"등록일자\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101,\"4호선\",\"동작\",\"1213.0\",\"1272.0\",\"20160109\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101,\"4호선\",\"이촌\",\"3365.0\",\"3687.0\",\"20160109\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101,\"4호선\",\"신용산\",\"5746.0\",\"6499.0\",\"20160109\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101,\"4호선\",\"삼각지\",\"1733.0\",\"2475.0\",\"20160109\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101,\"4호선\",\"숙대입구\",\"6217.0\",\"5748.0\",\"20160...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929556</th>\n",
       "      <td>20200930,\"2호선\",\"건대입구\",\"17739\",\"18062\",\"2020100...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929557</th>\n",
       "      <td>20200930,\"2호선\",\"성수\",\"6972\",\"7561\",\"20201003\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929558</th>\n",
       "      <td>20200930,\"2호선\",\"뚝섬\",\"5557\",\"5493\",\"20201003\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929559</th>\n",
       "      <td>20200930,\"2호선\",\"한양대\",\"1870\",\"1505\",\"20201003\",\"\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929560</th>\n",
       "      <td>20200930,\"2호선\",\"왕십리(성동구청)\",\"6817\",\"5052\",\"2020...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>929561 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     사용일자,\"노선명\",\"역명\",승차총승객수,하차총승객수,\"등록일자\"\n",
       "0        20160101,\"4호선\",\"동작\",\"1213.0\",\"1272.0\",\"20160109\"\n",
       "1        20160101,\"4호선\",\"이촌\",\"3365.0\",\"3687.0\",\"20160109\"\n",
       "2       20160101,\"4호선\",\"신용산\",\"5746.0\",\"6499.0\",\"20160109\"\n",
       "3       20160101,\"4호선\",\"삼각지\",\"1733.0\",\"2475.0\",\"20160109\"\n",
       "4       20160101,\"4호선\",\"숙대입구\",\"6217.0\",\"5748.0\",\"20160...\n",
       "...                                                   ...\n",
       "929556  20200930,\"2호선\",\"건대입구\",\"17739\",\"18062\",\"2020100...\n",
       "929557    20200930,\"2호선\",\"성수\",\"6972\",\"7561\",\"20201003\",\"\"\n",
       "929558    20200930,\"2호선\",\"뚝섬\",\"5557\",\"5493\",\"20201003\",\"\"\n",
       "929559   20200930,\"2호선\",\"한양대\",\"1870\",\"1505\",\"20201003\",\"\"\n",
       "929560  20200930,\"2호선\",\"왕십리(성동구청)\",\"6817\",\"5052\",\"2020...\n",
       "\n",
       "[929561 rows x 1 columns]"
      ]
     },
     "execution_count": 366,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp = pd.read_csv('./subway_merge1.csv', sep='\\r', encoding = \"CP949\")\n",
    "temp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "id": "55ccb92c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T12:02:40.665601Z",
     "start_time": "2021-10-03T12:02:40.579756Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 929561 entries, 0 to 929560\n",
      "Data columns (total 1 columns):\n",
      " #   Column                                Non-Null Count   Dtype \n",
      "---  ------                                --------------   ----- \n",
      " 0   사용일자,\"노선명\",\"역명\",승차총승객수,하차총승객수,\"등록일자\"  929561 non-null  object\n",
      "dtypes: object(1)\n",
      "memory usage: 7.1+ MB\n"
     ]
    }
   ],
   "source": [
    "temp = "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "9038d911",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:25:17.085416Z",
     "start_time": "2021-10-02T02:25:16.799264Z"
    }
   },
   "outputs": [],
   "source": [
    "temp = temp.drop('승하차총승객수', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "id": "2ecf6554",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:23:57.203133Z",
     "start_time": "2021-10-02T02:23:57.180337Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "사용일자      object\n",
       "노선명       object\n",
       "역명        object\n",
       "승차총승객수    object\n",
       "하차총승객수    object\n",
       "등록일자      object\n",
       "노선명역명     object\n",
       "dtype: object"
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "id": "e90f1c40",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:25:09.346219Z",
     "start_time": "2021-10-02T02:25:05.542306Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "사용일자       object\n",
       "노선명        object\n",
       "역명         object\n",
       "승차총승객수      Int64\n",
       "하차총승객수      Int64\n",
       "등록일자       object\n",
       "승하차총승객수    object\n",
       "노선명역명      object\n",
       "dtype: object"
      ]
     },
     "execution_count": 257,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#승하차총승객수 연산 위한 데이터 타입 변경 object -> int\n",
    "temp.convert_dtypes()\n",
    "pd.to_numeric(temp['승차총승객수'], errors='coerce')\n",
    "pd.to_numeric(temp['하차총승객수'], errors='coerce')\n",
    "temp['승차총승객수'] = pd.to_numeric(temp['승차총승객수'], errors='coerce').convert_dtypes() \n",
    "temp['하차총승객수'] = pd.to_numeric(temp['하차총승객수'], errors='coerce').convert_dtypes()\n",
    "temp.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "2e252c6b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:25:21.964177Z",
     "start_time": "2021-10-02T02:25:21.920467Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>노선명</th>\n",
       "      <th>역명</th>\n",
       "      <th>승차총승객수</th>\n",
       "      <th>하차총승객수</th>\n",
       "      <th>등록일자</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>동작</td>\n",
       "      <td>1213</td>\n",
       "      <td>1272</td>\n",
       "      <td>20160109</td>\n",
       "      <td>2485</td>\n",
       "      <td>4호선동작</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>이촌</td>\n",
       "      <td>3365</td>\n",
       "      <td>3687</td>\n",
       "      <td>20160109</td>\n",
       "      <td>7052</td>\n",
       "      <td>4호선이촌</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>신용산</td>\n",
       "      <td>5746</td>\n",
       "      <td>6499</td>\n",
       "      <td>20160109</td>\n",
       "      <td>12245</td>\n",
       "      <td>4호선신용산</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>삼각지</td>\n",
       "      <td>1733</td>\n",
       "      <td>2475</td>\n",
       "      <td>20160109</td>\n",
       "      <td>4208</td>\n",
       "      <td>4호선삼각지</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>숙대입구</td>\n",
       "      <td>6217</td>\n",
       "      <td>5748</td>\n",
       "      <td>20160109</td>\n",
       "      <td>11965</td>\n",
       "      <td>4호선숙대입구</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       사용일자  노선명    역명  승차총승객수  하차총승객수      등록일자  승하차총승객수    노선명역명\n",
       "0  20160101  4호선    동작    1213    1272  20160109     2485    4호선동작\n",
       "1  20160101  4호선    이촌    3365    3687  20160109     7052    4호선이촌\n",
       "2  20160101  4호선   신용산    5746    6499  20160109    12245   4호선신용산\n",
       "3  20160101  4호선   삼각지    1733    2475  20160109     4208   4호선삼각지\n",
       "4  20160101  4호선  숙대입구    6217    5748  20160109    11965  4호선숙대입구"
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp.insert(6,'승하차총승객수',temp['승차총승객수']+temp['하차총승객수'])\n",
    "temp.insert(6, '노선명역명',temp['노선명']+temp['역명'])\n",
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "id": "ebd84fff",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:25:43.582038Z",
     "start_time": "2021-10-02T02:25:41.095785Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>노선명</th>\n",
       "      <th>역명</th>\n",
       "      <th>승차총승객수</th>\n",
       "      <th>하차총승객수</th>\n",
       "      <th>등록일자</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역명</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>동작</td>\n",
       "      <td>1213</td>\n",
       "      <td>1272</td>\n",
       "      <td>20160109</td>\n",
       "      <td>2485</td>\n",
       "      <td>4호선동작</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>이촌</td>\n",
       "      <td>3365</td>\n",
       "      <td>3687</td>\n",
       "      <td>20160109</td>\n",
       "      <td>7052</td>\n",
       "      <td>4호선이촌</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>신용산</td>\n",
       "      <td>5746</td>\n",
       "      <td>6499</td>\n",
       "      <td>20160109</td>\n",
       "      <td>12245</td>\n",
       "      <td>4호선신용산</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>삼각지</td>\n",
       "      <td>1733</td>\n",
       "      <td>2475</td>\n",
       "      <td>20160109</td>\n",
       "      <td>4208</td>\n",
       "      <td>4호선삼각지</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4호선</td>\n",
       "      <td>숙대입구</td>\n",
       "      <td>6217</td>\n",
       "      <td>5748</td>\n",
       "      <td>20160109</td>\n",
       "      <td>11965</td>\n",
       "      <td>4호선숙대입구</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       사용일자  노선명    역명  승차총승객수  하차총승객수      등록일자  승하차총승객수    노선명역명   지역명\n",
       "0  20160101  4호선    동작    1213    1272  20160109     2485    4호선동작  None\n",
       "1  20160101  4호선    이촌    3365    3687  20160109     7052    4호선이촌  None\n",
       "2  20160101  4호선   신용산    5746    6499  20160109    12245   4호선신용산  None\n",
       "3  20160101  4호선   삼각지    1733    2475  20160109     4208   4호선삼각지  None\n",
       "4  20160101  4호선  숙대입구    6217    5748  20160109    11965  4호선숙대입구  None"
      ]
     },
     "execution_count": 260,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def st2district(st):\n",
    "    if st in ['2호선홍대입구', '경의선홍대입구', '공항철도 1호선홍대입구']:\n",
    "        return '홍대'\n",
    "    elif st in ['경의선가좌', '2호선홍대입구', '경의선홍대입구', '공항철도 1호선홍대입구']:\n",
    "        return '연남'\n",
    "    elif st in ['6호선녹사평(용산구청)', '6호선이태원']:\n",
    "        return '이태원'\n",
    "    elif st in ['1호선종로3가', '3호선종로3가', '5호선종로3가', '1호선종로5가']:\n",
    "        return '종로'\n",
    "    elif st in ['2호선을지로3가', '3호선을지로3가', '2호선을지로4가','5호선을지로4가', '2호선을지로입구', '3호선충무로', '4호선충무로']:\n",
    "        return '을지로'\n",
    "    elif st in ['분당선서울숲', '2호선성수']:\n",
    "        return '성수'\n",
    "    elif st in ['경원선한남', '3호선옥수', '경원선옥수']:\n",
    "        return '한남'\n",
    "    elif st in ['3호선옥수', '신사동']:\n",
    "        return '청담'\n",
    "    elif st in ['3호선신사', '3호선압구정', '분당선압구정로데오']:\n",
    "        return '신사'\n",
    "    elif st in ['3호선안국']:\n",
    "        return '삼청'\n",
    "    elif st in ['3호선경복궁(정부서울청사)']:\n",
    "        return '서촌'\n",
    "    elif st in ['2호선신당', '6호선신당', '3호선약수', '6호선약수', '5호선청구', '6호선청구']:\n",
    "        return '장충'\n",
    "    elif st in ['7호선내방', '9호선신반포', '7호선이수', '4호선총신대입구(이수)']:\n",
    "        return '반포'\n",
    "    elif st in ['4호선혜화']:\n",
    "        return '혜화'\n",
    "    elif st in ['2호선신촌', '경의선신촌', '2호선이대']:\n",
    "        return '신촌'\n",
    "    elif st in ['2호선강남']:\n",
    "        return '강남'\n",
    "    \n",
    "temp['지역명'] = temp['노선명역명'].apply(st2district)\n",
    "temp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "56aba2a8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T07:48:45.394365Z",
     "start_time": "2021-10-01T07:48:44.939110Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 911678 entries, 0 to 911677\n",
      "Data columns (total 9 columns):\n",
      " #   Column   Non-Null Count   Dtype \n",
      "---  ------   --------------   ----- \n",
      " 0   사용일자     911678 non-null  object\n",
      " 1   노선명      911678 non-null  object\n",
      " 2   역명       911678 non-null  object\n",
      " 3   승차총승객수   911678 non-null  object\n",
      " 4   하차총승객수   911678 non-null  object\n",
      " 5   등록일자     911678 non-null  object\n",
      " 6   노선명역명    911678 non-null  object\n",
      " 7   승하차총승객수  911678 non-null  object\n",
      " 8   지역명      65505 non-null   object\n",
      "dtypes: object(9)\n",
      "memory usage: 62.6+ MB\n"
     ]
    }
   ],
   "source": [
    "temp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "37cc5134",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:26:03.253817Z",
     "start_time": "2021-10-02T02:26:03.041432Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역명</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20160101</td>\n",
       "      <td>2485</td>\n",
       "      <td>4호선동작</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20160101</td>\n",
       "      <td>7052</td>\n",
       "      <td>4호선이촌</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20160101</td>\n",
       "      <td>12245</td>\n",
       "      <td>4호선신용산</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20160101</td>\n",
       "      <td>4208</td>\n",
       "      <td>4호선삼각지</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20160101</td>\n",
       "      <td>11965</td>\n",
       "      <td>4호선숙대입구</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911673</th>\n",
       "      <td>20200430</td>\n",
       "      <td>15516</td>\n",
       "      <td>7호선상동</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911674</th>\n",
       "      <td>20200430</td>\n",
       "      <td>4902</td>\n",
       "      <td>7호선삼산체육관</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911675</th>\n",
       "      <td>20200430</td>\n",
       "      <td>10017</td>\n",
       "      <td>7호선굴포천</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911676</th>\n",
       "      <td>20200430</td>\n",
       "      <td>10097</td>\n",
       "      <td>7호선부평구청</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911677</th>\n",
       "      <td>20200430</td>\n",
       "      <td>19074</td>\n",
       "      <td>8호선암사</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>911678 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            사용일자  승하차총승객수     노선명역명   지역명\n",
       "0       20160101     2485     4호선동작  None\n",
       "1       20160101     7052     4호선이촌  None\n",
       "2       20160101    12245    4호선신용산  None\n",
       "3       20160101     4208    4호선삼각지  None\n",
       "4       20160101    11965   4호선숙대입구  None\n",
       "...          ...      ...       ...   ...\n",
       "911673  20200430    15516     7호선상동  None\n",
       "911674  20200430     4902  7호선삼산체육관  None\n",
       "911675  20200430    10017    7호선굴포천  None\n",
       "911676  20200430    10097   7호선부평구청  None\n",
       "911677  20200430    19074     8호선암사  None\n",
       "\n",
       "[911678 rows x 4 columns]"
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = temp[['사용일자','승하차총승객수','노선명역명','지역명']]\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "id": "bc5bd45e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:26:10.849920Z",
     "start_time": "2021-10-02T02:26:06.456185Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역군</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>20160101</td>\n",
       "      <td>1377413463</td>\n",
       "      <td>4호선충무로</td>\n",
       "      <td>을지로</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>20160101</td>\n",
       "      <td>2809329738</td>\n",
       "      <td>4호선혜화</td>\n",
       "      <td>혜화</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>20160101</td>\n",
       "      <td>1454414758</td>\n",
       "      <td>3호선신사</td>\n",
       "      <td>신사</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>20160101</td>\n",
       "      <td>1126312023</td>\n",
       "      <td>3호선압구정</td>\n",
       "      <td>신사</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>20160101</td>\n",
       "      <td>45974703</td>\n",
       "      <td>3호선옥수</td>\n",
       "      <td>한남</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916436</th>\n",
       "      <td>20200429</td>\n",
       "      <td>16501812</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916437</th>\n",
       "      <td>20200429</td>\n",
       "      <td>82618657</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916438</th>\n",
       "      <td>20200430</td>\n",
       "      <td>4508949461</td>\n",
       "      <td>2호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916439</th>\n",
       "      <td>20200430</td>\n",
       "      <td>76727922</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916440</th>\n",
       "      <td>20200430</td>\n",
       "      <td>15271702</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>73432 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            사용일자     승하차총승객수         노선명역명  지역군\n",
       "8       20160101  1377413463        4호선충무로  을지로\n",
       "11      20160101  2809329738         4호선혜화   혜화\n",
       "38      20160101  1454414758         3호선신사   신사\n",
       "39      20160101  1126312023        3호선압구정   신사\n",
       "40      20160101    45974703         3호선옥수   한남\n",
       "...          ...         ...           ...  ...\n",
       "916436  20200429    16501812       경의선홍대입구   연남\n",
       "916437  20200429    82618657  공항철도 1호선홍대입구   연남\n",
       "916438  20200430  4508949461       2호선홍대입구   연남\n",
       "916439  20200430    76727922  공항철도 1호선홍대입구   연남\n",
       "916440  20200430    15271702       경의선홍대입구   연남\n",
       "\n",
       "[73432 rows x 4 columns]"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = data1.dropna(axis=0, how='any')\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "20364ad6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:26:13.355740Z",
     "start_time": "2021-10-02T02:26:13.318766Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 73432 entries, 8 to 916440\n",
      "Data columns (total 4 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   사용일자     73432 non-null  object\n",
      " 1   승하차총승객수  73432 non-null  object\n",
      " 2   노선명역명    73432 non-null  object\n",
      " 3   지역군      73432 non-null  object\n",
      "dtypes: object(4)\n",
      "memory usage: 2.8+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "id": "cb23b70c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T10:26:09.256266Z",
     "start_time": "2021-10-03T10:26:09.195882Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>YearMonth</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역군</th>\n",
       "      <th>Date</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1377413463</td>\n",
       "      <td>4호선충무로</td>\n",
       "      <td>을지로</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>2809329738</td>\n",
       "      <td>4호선혜화</td>\n",
       "      <td>혜화</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1454414758</td>\n",
       "      <td>3호선신사</td>\n",
       "      <td>신사</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1126312023</td>\n",
       "      <td>3호선압구정</td>\n",
       "      <td>신사</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>45974703</td>\n",
       "      <td>3호선옥수</td>\n",
       "      <td>한남</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916436</th>\n",
       "      <td>20200429</td>\n",
       "      <td>202004</td>\n",
       "      <td>16501812</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-29</td>\n",
       "      <td>2020</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916437</th>\n",
       "      <td>20200429</td>\n",
       "      <td>202004</td>\n",
       "      <td>82618657</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-29</td>\n",
       "      <td>2020</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916438</th>\n",
       "      <td>20200430</td>\n",
       "      <td>202004</td>\n",
       "      <td>4508949461</td>\n",
       "      <td>2호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916439</th>\n",
       "      <td>20200430</td>\n",
       "      <td>202004</td>\n",
       "      <td>76727922</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916440</th>\n",
       "      <td>20200430</td>\n",
       "      <td>202004</td>\n",
       "      <td>15271702</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>73432 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            사용일자 YearMonth     승하차총승객수         노선명역명  지역군       Date  Year  \\\n",
       "8       20160101    201601  1377413463        4호선충무로  을지로 2016-01-01  2016   \n",
       "11      20160101    201601  2809329738         4호선혜화   혜화 2016-01-01  2016   \n",
       "38      20160101    201601  1454414758         3호선신사   신사 2016-01-01  2016   \n",
       "39      20160101    201601  1126312023        3호선압구정   신사 2016-01-01  2016   \n",
       "40      20160101    201601    45974703         3호선옥수   한남 2016-01-01  2016   \n",
       "...          ...       ...         ...           ...  ...        ...   ...   \n",
       "916436  20200429    202004    16501812       경의선홍대입구   연남 2020-04-29  2020   \n",
       "916437  20200429    202004    82618657  공항철도 1호선홍대입구   연남 2020-04-29  2020   \n",
       "916438  20200430    202004  4508949461       2호선홍대입구   연남 2020-04-30  2020   \n",
       "916439  20200430    202004    76727922  공항철도 1호선홍대입구   연남 2020-04-30  2020   \n",
       "916440  20200430    202004    15271702       경의선홍대입구   연남 2020-04-30  2020   \n",
       "\n",
       "        Month  \n",
       "8           1  \n",
       "11          1  \n",
       "38          1  \n",
       "39          1  \n",
       "40          1  \n",
       "...       ...  \n",
       "916436      4  \n",
       "916437      4  \n",
       "916438      4  \n",
       "916439      4  \n",
       "916440      4  \n",
       "\n",
       "[73432 rows x 8 columns]"
      ]
     },
     "execution_count": 273,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd \n",
    "\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "df['Date']= pd.to_datetime(df['사용일자'])\n",
    "df['Year']= df['Date'].dt.year.rename('Year')\n",
    "df['Month']= df['Date'].dt.month.rename('Month')\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "ad8675c6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:10:53.169914Z",
     "start_time": "2021-10-02T02:10:53.104592Z"
    }
   },
   "outputs": [],
   "source": [
    "df = df.drop('YearMonth', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "d51c8afb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:26:30.387040Z",
     "start_time": "2021-10-02T02:26:30.355036Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 73432 entries, 8 to 916440\n",
      "Data columns (total 7 columns):\n",
      " #   Column   Non-Null Count  Dtype         \n",
      "---  ------   --------------  -----         \n",
      " 0   사용일자     73432 non-null  object        \n",
      " 1   승하차총승객수  73432 non-null  object        \n",
      " 2   노선명역명    73432 non-null  object        \n",
      " 3   지역군      73432 non-null  object        \n",
      " 4   Date     73432 non-null  datetime64[ns]\n",
      " 5   Year     73432 non-null  int64         \n",
      " 6   Month    73432 non-null  int64         \n",
      "dtypes: datetime64[ns](1), int64(2), object(4)\n",
      "memory usage: 4.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "id": "71661327",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:28:16.803942Z",
     "start_time": "2021-10-02T02:28:16.576988Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 73432 entries, 8 to 916440\n",
      "Data columns (total 7 columns):\n",
      " #   Column   Non-Null Count  Dtype         \n",
      "---  ------   --------------  -----         \n",
      " 0   사용일자     73432 non-null  object        \n",
      " 1   승하차총승객수  73432 non-null  Int64         \n",
      " 2   노선명역명    73432 non-null  object        \n",
      " 3   지역군      73432 non-null  object        \n",
      " 4   Date     73432 non-null  datetime64[ns]\n",
      " 5   Year     73432 non-null  object        \n",
      " 6   Month    73432 non-null  object        \n",
      "dtypes: Int64(1), datetime64[ns](1), object(5)\n",
      "memory usage: 4.6+ MB\n"
     ]
    }
   ],
   "source": [
    "#datetime 을 str 로 변환\n",
    "df['Year']=df['Year'].astype(str)\n",
    "df['Month']=df['Month'].astype(str)\n",
    "pd.to_numeric(df['승하차총승객수'], errors='coerce')\n",
    "df['승하차총승객수'] = pd.to_numeric(df['승하차총승객수'], errors='coerce').convert_dtypes() \n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "d0c27a38",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:28:25.330896Z",
     "start_time": "2021-10-02T02:28:25.279789Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역군</th>\n",
       "      <th>Date</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>916436</th>\n",
       "      <td>20200429</td>\n",
       "      <td>16501812</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-29</td>\n",
       "      <td>2020</td>\n",
       "      <td>04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916437</th>\n",
       "      <td>20200429</td>\n",
       "      <td>82618657</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-29</td>\n",
       "      <td>2020</td>\n",
       "      <td>04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916438</th>\n",
       "      <td>20200430</td>\n",
       "      <td>4508949461</td>\n",
       "      <td>2호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916439</th>\n",
       "      <td>20200430</td>\n",
       "      <td>76727922</td>\n",
       "      <td>공항철도 1호선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916440</th>\n",
       "      <td>20200430</td>\n",
       "      <td>15271702</td>\n",
       "      <td>경의선홍대입구</td>\n",
       "      <td>연남</td>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>2020</td>\n",
       "      <td>04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            사용일자     승하차총승객수         노선명역명 지역군       Date  Year Month\n",
       "916436  20200429    16501812       경의선홍대입구  연남 2020-04-29  2020    04\n",
       "916437  20200429    82618657  공항철도 1호선홍대입구  연남 2020-04-29  2020    04\n",
       "916438  20200430  4508949461       2호선홍대입구  연남 2020-04-30  2020    04\n",
       "916439  20200430    76727922  공항철도 1호선홍대입구  연남 2020-04-30  2020    04\n",
       "916440  20200430    15271702       경의선홍대입구  연남 2020-04-30  2020    04"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Month 1~9월 01월~09월로 데이터 바꾸기\n",
    "def add0(mth):\n",
    "    return mth.zfill(2)\n",
    "df['Month'] = df['Month'].apply(add0)\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "id": "49db441f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:28:28.086512Z",
     "start_time": "2021-10-02T02:28:28.054368Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>사용일자</th>\n",
       "      <th>YearMonth</th>\n",
       "      <th>승하차총승객수</th>\n",
       "      <th>노선명역명</th>\n",
       "      <th>지역군</th>\n",
       "      <th>Date</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1377413463</td>\n",
       "      <td>4호선충무로</td>\n",
       "      <td>을지로</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>2809329738</td>\n",
       "      <td>4호선혜화</td>\n",
       "      <td>혜화</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1454414758</td>\n",
       "      <td>3호선신사</td>\n",
       "      <td>신사</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>1126312023</td>\n",
       "      <td>3호선압구정</td>\n",
       "      <td>신사</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>20160101</td>\n",
       "      <td>201601</td>\n",
       "      <td>45974703</td>\n",
       "      <td>3호선옥수</td>\n",
       "      <td>한남</td>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>2016</td>\n",
       "      <td>01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        사용일자 YearMonth     승하차총승객수   노선명역명  지역군       Date  Year Month\n",
       "8   20160101    201601  1377413463  4호선충무로  을지로 2016-01-01  2016    01\n",
       "11  20160101    201601  2809329738   4호선혜화   혜화 2016-01-01  2016    01\n",
       "38  20160101    201601  1454414758   3호선신사   신사 2016-01-01  2016    01\n",
       "39  20160101    201601  1126312023  3호선압구정   신사 2016-01-01  2016    01\n",
       "40  20160101    201601    45974703   3호선옥수   한남 2016-01-01  2016    01"
      ]
     },
     "execution_count": 269,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.insert(1,\"YearMonth\",df['Year']+df['Month'],True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "id": "3b5272ea",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T10:26:37.249015Z",
     "start_time": "2021-10-03T10:26:37.141566Z"
    }
   },
   "outputs": [],
   "source": [
    "pv = pd.pivot_table(df,\n",
    "                          index = 'YearMonth',\n",
    "                          columns = '지역군',\n",
    "                          values = '승하차총승객수',\n",
    "                          aggfunc = 'sum',\n",
    "                          fill_value=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "c66445d1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-03T10:27:52.247500Z",
     "start_time": "2021-10-03T10:27:52.217847Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>지역군</th>\n",
       "      <th>강남</th>\n",
       "      <th>반포</th>\n",
       "      <th>삼청</th>\n",
       "      <th>서촌</th>\n",
       "      <th>성수</th>\n",
       "      <th>신사</th>\n",
       "      <th>신촌</th>\n",
       "      <th>연남</th>\n",
       "      <th>을지로</th>\n",
       "      <th>이태원</th>\n",
       "      <th>장충</th>\n",
       "      <th>종로</th>\n",
       "      <th>청담</th>\n",
       "      <th>한남</th>\n",
       "      <th>혜화</th>\n",
       "      <th>홍대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YearMonth</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>201912</th>\n",
       "      <td>2655596023564</td>\n",
       "      <td>160931183034</td>\n",
       "      <td>79783852032</td>\n",
       "      <td>81195809808</td>\n",
       "      <td>105115562976</td>\n",
       "      <td>268719342055</td>\n",
       "      <td>209399163796</td>\n",
       "      <td>1195974868232</td>\n",
       "      <td>410446907274</td>\n",
       "      <td>55341119434</td>\n",
       "      <td>113000154882</td>\n",
       "      <td>280505952804</td>\n",
       "      <td>119282137452</td>\n",
       "      <td>25669332797</td>\n",
       "      <td>141926958940</td>\n",
       "      <td>1194252350015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202001</th>\n",
       "      <td>2499082320692</td>\n",
       "      <td>136811824602</td>\n",
       "      <td>67498965857</td>\n",
       "      <td>66894473072</td>\n",
       "      <td>89639324623</td>\n",
       "      <td>238426506466</td>\n",
       "      <td>171489916205</td>\n",
       "      <td>520748528358</td>\n",
       "      <td>353336830875</td>\n",
       "      <td>45980603896</td>\n",
       "      <td>90673228080</td>\n",
       "      <td>248710313800</td>\n",
       "      <td>108781399043</td>\n",
       "      <td>22268034672</td>\n",
       "      <td>114994780650</td>\n",
       "      <td>519205865441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202002</th>\n",
       "      <td>1670909070121</td>\n",
       "      <td>116937308391</td>\n",
       "      <td>48624176013</td>\n",
       "      <td>48804943823</td>\n",
       "      <td>80238824340</td>\n",
       "      <td>202252954703</td>\n",
       "      <td>134007257427</td>\n",
       "      <td>194348288105</td>\n",
       "      <td>275172378949</td>\n",
       "      <td>31931388499</td>\n",
       "      <td>67907632476</td>\n",
       "      <td>172159920406</td>\n",
       "      <td>101003011856</td>\n",
       "      <td>8640671916</td>\n",
       "      <td>85010874579</td>\n",
       "      <td>193099972139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202003</th>\n",
       "      <td>188023203343</td>\n",
       "      <td>94659171945</td>\n",
       "      <td>32417178776</td>\n",
       "      <td>30760798877</td>\n",
       "      <td>71412697022</td>\n",
       "      <td>155373109296</td>\n",
       "      <td>77080051104</td>\n",
       "      <td>121143535194</td>\n",
       "      <td>195641046539</td>\n",
       "      <td>11213955630</td>\n",
       "      <td>52066524733</td>\n",
       "      <td>113280472327</td>\n",
       "      <td>83972256253</td>\n",
       "      <td>2803030497</td>\n",
       "      <td>62153335234</td>\n",
       "      <td>120081016873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202004</th>\n",
       "      <td>202023842777</td>\n",
       "      <td>98212631635</td>\n",
       "      <td>36053706836</td>\n",
       "      <td>35021240524</td>\n",
       "      <td>73387733456</td>\n",
       "      <td>166194542352</td>\n",
       "      <td>90792499477</td>\n",
       "      <td>132061123924</td>\n",
       "      <td>219477506620</td>\n",
       "      <td>12199561805</td>\n",
       "      <td>54089235837</td>\n",
       "      <td>142972562642</td>\n",
       "      <td>82185527869</td>\n",
       "      <td>3029734179</td>\n",
       "      <td>67115287868</td>\n",
       "      <td>130894726201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "지역군                   강남            반포           삼청           서촌  \\\n",
       "YearMonth                                                          \n",
       "201912     2655596023564  160931183034  79783852032  81195809808   \n",
       "202001     2499082320692  136811824602  67498965857  66894473072   \n",
       "202002     1670909070121  116937308391  48624176013  48804943823   \n",
       "202003      188023203343   94659171945  32417178776  30760798877   \n",
       "202004      202023842777   98212631635  36053706836  35021240524   \n",
       "\n",
       "지역군                  성수            신사            신촌             연남  \\\n",
       "YearMonth                                                            \n",
       "201912     105115562976  268719342055  209399163796  1195974868232   \n",
       "202001      89639324623  238426506466  171489916205   520748528358   \n",
       "202002      80238824340  202252954703  134007257427   194348288105   \n",
       "202003      71412697022  155373109296   77080051104   121143535194   \n",
       "202004      73387733456  166194542352   90792499477   132061123924   \n",
       "\n",
       "지역군                 을지로          이태원            장충            종로  \\\n",
       "YearMonth                                                          \n",
       "201912     410446907274  55341119434  113000154882  280505952804   \n",
       "202001     353336830875  45980603896   90673228080  248710313800   \n",
       "202002     275172378949  31931388499   67907632476  172159920406   \n",
       "202003     195641046539  11213955630   52066524733  113280472327   \n",
       "202004     219477506620  12199561805   54089235837  142972562642   \n",
       "\n",
       "지역군                  청담           한남            혜화             홍대  \n",
       "YearMonth                                                          \n",
       "201912     119282137452  25669332797  141926958940  1194252350015  \n",
       "202001     108781399043  22268034672  114994780650   519205865441  \n",
       "202002     101003011856   8640671916   85010874579   193099972139  \n",
       "202003      83972256253   2803030497   62153335234   120081016873  \n",
       "202004      82185527869   3029734179   67115287868   130894726201  "
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pv.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "id": "9250982a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:28:42.229439Z",
     "start_time": "2021-10-02T02:28:42.207049Z"
    }
   },
   "outputs": [],
   "source": [
    "df.to_csv('./subway_results1.csv',index='사용일자', encoding=\"utf-8-sig\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "1da52a31",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-02T02:07:36.483645Z",
     "start_time": "2021-10-02T02:07:36.454795Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Series' object has no attribute 'columns'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-216-1cc02e431581>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m pv = pd.pivot_table(df,\n\u001b[0m\u001b[0;32m      2\u001b[0m                     \u001b[0mindex\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'YearMonth'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m                     \u001b[0mcolumns\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'지역군'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m                     fill_value=0)\n\u001b[0;32m      5\u001b[0m \u001b[0mpv\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\reshape\\pivot.py\u001b[0m in \u001b[0;36mpivot_table\u001b[1;34m(data, values, index, columns, aggfunc, fill_value, margins, dropna, margins_name, observed)\u001b[0m\n\u001b[0;32m    102\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    103\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 104\u001b[1;33m         \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    105\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mkey\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mkeys\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    106\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[1;34m(self, name)\u001b[0m\n\u001b[0;32m   5463\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_can_hold_identifiers_and_holds_name\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5464\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 5465\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   5466\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5467\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'Series' object has no attribute 'columns'"
     ]
    }
   ],
   "source": [
    "pv = pd.pivot_table(df,\n",
    "                          index = 'Date',\n",
    "                          columns = '지역군',\n",
    "                          values = '승하차총승객수',\n",
    "                          aggfunc = 'sum',\n",
    "                          fill_value=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "99cb692c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T08:52:48.698766Z",
     "start_time": "2021-10-01T08:52:48.530454Z"
    }
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Date'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3079\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3080\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3081\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Date'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-143-26f52cba395d>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m df1 = pv.groupby([pv['Date'].dt.year.rename('Year'),\n\u001b[0m\u001b[0;32m      2\u001b[0m                   pv['Date'].dt.month.rename('Month')])['승하차총승객수'].sum()\n\u001b[0;32m      3\u001b[0m \u001b[1;31m# df1 = df1.insert(0,'YearMonth','df1['Year']''+'df1['Month'])\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[0mdf1\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3022\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3023\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3024\u001b[1;33m             \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3025\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3026\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\fastcampus\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3080\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3081\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3082\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3083\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3084\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mtolerance\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Date'"
     ]
    }
   ],
   "source": [
    "df1 = pv.groupby([pv['Date'].dt.year.rename('Year'),\n",
    "                  pv['Date'].dt.month.rename('Month')])['승하차총승객수'].sum()\n",
    "# df1 = df1.insert(0,'YearMonth','df1['Year']''+'df1['Month'])\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "865d43c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "580b5439",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:54:05.044295Z",
     "start_time": "2021-10-01T06:54:01.448062Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>지역군</th>\n",
       "      <th>강남</th>\n",
       "      <th>반포</th>\n",
       "      <th>삼청</th>\n",
       "      <th>서촌</th>\n",
       "      <th>성수</th>\n",
       "      <th>신사</th>\n",
       "      <th>신촌</th>\n",
       "      <th>연남</th>\n",
       "      <th>을지로</th>\n",
       "      <th>이태원</th>\n",
       "      <th>장충</th>\n",
       "      <th>종로</th>\n",
       "      <th>청담</th>\n",
       "      <th>한남</th>\n",
       "      <th>혜화</th>\n",
       "      <th>홍대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datetime</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-01</th>\n",
       "      <td>3789339308</td>\n",
       "      <td>43144195764170781060972</td>\n",
       "      <td>1601817724</td>\n",
       "      <td>0</td>\n",
       "      <td>6730685821591931</td>\n",
       "      <td>1454414758112631202345644909</td>\n",
       "      <td>11610121202951828196389334</td>\n",
       "      <td>1971193563294639611030190661325361</td>\n",
       "      <td>1377413463102317265137423395641157942487322901...</td>\n",
       "      <td>484354441891019141</td>\n",
       "      <td>616657467491809314221372158815024076324215871591</td>\n",
       "      <td>288947371190811480203661830178757693</td>\n",
       "      <td>6323665046904475</td>\n",
       "      <td>45974703302621751397</td>\n",
       "      <td>2809329738</td>\n",
       "      <td>63294639611030190661325361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-02</th>\n",
       "      <td>6501670974</td>\n",
       "      <td>17071680711570501145511549</td>\n",
       "      <td>2054923890</td>\n",
       "      <td>0</td>\n",
       "      <td>94181036732733102</td>\n",
       "      <td>237152614227111293151147912893</td>\n",
       "      <td>16311175094324044695528526</td>\n",
       "      <td>2685278981237369761418893113792529</td>\n",
       "      <td>1718117849203792433272077249871277793900237407...</td>\n",
       "      <td>747183171960123374</td>\n",
       "      <td>9323905010667115542441227923032186219622165327...</td>\n",
       "      <td>43797529197362032032017305121143711490</td>\n",
       "      <td>113001239181168903</td>\n",
       "      <td>30843195493470837392</td>\n",
       "      <td>3672640397</td>\n",
       "      <td>81237369761418893113792529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-03</th>\n",
       "      <td>4754248217</td>\n",
       "      <td>195519375765602399279718</td>\n",
       "      <td>1468316980</td>\n",
       "      <td>0</td>\n",
       "      <td>8025876627612817</td>\n",
       "      <td>1557716286179421877572417723</td>\n",
       "      <td>12676142333469934574441467</td>\n",
       "      <td>2407250062013620361201196069536271</td>\n",
       "      <td>2029293304377935748439804830235288251343153312...</td>\n",
       "      <td>571757491496214050</td>\n",
       "      <td>8353806695951045019991943174918291884198349954356</td>\n",
       "      <td>310447491176411784224781997174307012</td>\n",
       "      <td>8191891969167203</td>\n",
       "      <td>58076459241624296824</td>\n",
       "      <td>3076133467</td>\n",
       "      <td>62013620361201196069536271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>127099127632</td>\n",
       "      <td>3402348516783172951856518388</td>\n",
       "      <td>2765029161</td>\n",
       "      <td>0</td>\n",
       "      <td>304203307562436219</td>\n",
       "      <td>341783706141271457961572817676</td>\n",
       "      <td>208792194955692576399561302</td>\n",
       "      <td>4427418873544753441356210774677352</td>\n",
       "      <td>1011314130361568815517242562399157162575276187...</td>\n",
       "      <td>600861471301213971</td>\n",
       "      <td>1585015427158641685645354362402839924255444272...</td>\n",
       "      <td>444224313631631316939772124951530815169</td>\n",
       "      <td>25591296262706830042</td>\n",
       "      <td>3929471048051060611122</td>\n",
       "      <td>4044042077</td>\n",
       "      <td>73544753441356210774677352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>128114128123</td>\n",
       "      <td>1905118805170601750335963584</td>\n",
       "      <td>2862530940</td>\n",
       "      <td>0</td>\n",
       "      <td>311183374364496225</td>\n",
       "      <td>426774659435296379791666618482</td>\n",
       "      <td>554145670121920222409141261</td>\n",
       "      <td>4217405475745782921352221577007489</td>\n",
       "      <td>5900759288246412445315920156981163913149377933...</td>\n",
       "      <td>137441486967646922</td>\n",
       "      <td>1598616983165301585093089777428044834058412546...</td>\n",
       "      <td>444054253631529315379981126551569215390</td>\n",
       "      <td>27343306162626930351</td>\n",
       "      <td>1082611393481348154937</td>\n",
       "      <td>4322244682</td>\n",
       "      <td>75745782921352221577007489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-26</th>\n",
       "      <td>3244231585</td>\n",
       "      <td>8871959341204295709766399961119</td>\n",
       "      <td>67147657</td>\n",
       "      <td>81948792</td>\n",
       "      <td>92241025251365471</td>\n",
       "      <td>996910431115201143069567887</td>\n",
       "      <td>189271878347735146196184</td>\n",
       "      <td>2306230239297383511256144964286155</td>\n",
       "      <td>1208311487495146592574253921772317106556679310...</td>\n",
       "      <td>38453870101868961</td>\n",
       "      <td>699875465343519014811272137014351426147729173704</td>\n",
       "      <td>1280011769747073932927407164576079</td>\n",
       "      <td>5203554345744904</td>\n",
       "      <td>43734668172717994325</td>\n",
       "      <td>1672117682</td>\n",
       "      <td>39297383511256144964286155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-27</th>\n",
       "      <td>8408081425</td>\n",
       "      <td>18359200121353514027144681433023452334</td>\n",
       "      <td>1734118101</td>\n",
       "      <td>1603016147</td>\n",
       "      <td>322113527082308508</td>\n",
       "      <td>282903056727991298011413215933</td>\n",
       "      <td>29952311631039510881731921</td>\n",
       "      <td>5001450844201464971368151068247068</td>\n",
       "      <td>3678638188205252072812607126741022310810253642...</td>\n",
       "      <td>4083397484068765</td>\n",
       "      <td>1300613334123281202340073509345034693581401969...</td>\n",
       "      <td>257632404122177223779768112931073110891</td>\n",
       "      <td>19048212822296224993</td>\n",
       "      <td>83938804405837853721</td>\n",
       "      <td>2510625716</td>\n",
       "      <td>44201464971368151068247068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-28</th>\n",
       "      <td>8647083769</td>\n",
       "      <td>18705205301378114167151781506323822383</td>\n",
       "      <td>1771118802</td>\n",
       "      <td>1693916799</td>\n",
       "      <td>319943591288589101</td>\n",
       "      <td>291963187529572313501549417455</td>\n",
       "      <td>309723224210581110217351023</td>\n",
       "      <td>4967455346375491041490163872757573</td>\n",
       "      <td>3784139230208122127213073130611061711122102634...</td>\n",
       "      <td>4304431388379325</td>\n",
       "      <td>1325113415125161217840453663340435123651407171...</td>\n",
       "      <td>2554323869229602299110063117191149411207</td>\n",
       "      <td>19216216972320025454</td>\n",
       "      <td>87728909409538723625</td>\n",
       "      <td>2766227952</td>\n",
       "      <td>46375491041490163872757573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-29</th>\n",
       "      <td>9044091148</td>\n",
       "      <td>19643215121394214321155611554525972537</td>\n",
       "      <td>1835619357</td>\n",
       "      <td>1786318021</td>\n",
       "      <td>328073683996899680</td>\n",
       "      <td>302823323230330336101596718859</td>\n",
       "      <td>328653506011564117547921115</td>\n",
       "      <td>5202470250189568631650181282618657</td>\n",
       "      <td>3850239975216732203913261132301082811785267322...</td>\n",
       "      <td>482851271014912539</td>\n",
       "      <td>1384713815129161255440293513356035943716410774...</td>\n",
       "      <td>2733625752236552410910366127521232413068</td>\n",
       "      <td>19344221302323725807</td>\n",
       "      <td>91589202423440545526</td>\n",
       "      <td>3013330473</td>\n",
       "      <td>50189568631650181282618657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-04-30</th>\n",
       "      <td>4198442466</td>\n",
       "      <td>1403139611476120715540540086198086</td>\n",
       "      <td>1105913908</td>\n",
       "      <td>1089611960</td>\n",
       "      <td>128461447972498044</td>\n",
       "      <td>13749150161520416421985111792</td>\n",
       "      <td>215032240867306896321290</td>\n",
       "      <td>3170273845089494617672792215271702</td>\n",
       "      <td>1610615554687668305711592135603947919495172679...</td>\n",
       "      <td>443949541084712516</td>\n",
       "      <td>887489347208662622431881180218242110226148044968</td>\n",
       "      <td>182181709015193153943994618994339638</td>\n",
       "      <td>7373804960506343</td>\n",
       "      <td>58815711235621592323</td>\n",
       "      <td>1907620060</td>\n",
       "      <td>45089494617672792215271702</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1582 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "지역군                   강남                                      반포          삼청  \\\n",
       "datetime                                                                       \n",
       "2016-01-01    3789339308                 43144195764170781060972  1601817724   \n",
       "2016-01-02    6501670974              17071680711570501145511549  2054923890   \n",
       "2016-01-03    4754248217                195519375765602399279718  1468316980   \n",
       "2016-01-04  127099127632            3402348516783172951856518388  2765029161   \n",
       "2016-01-05  128114128123            1905118805170601750335963584  2862530940   \n",
       "...                  ...                                     ...         ...   \n",
       "2020-04-26    3244231585         8871959341204295709766399961119    67147657   \n",
       "2020-04-27    8408081425  18359200121353514027144681433023452334  1734118101   \n",
       "2020-04-28    8647083769  18705205301378114167151781506323822383  1771118802   \n",
       "2020-04-29    9044091148  19643215121394214321155611554525972537  1835619357   \n",
       "2020-04-30    4198442466      1403139611476120715540540086198086  1105913908   \n",
       "\n",
       "지역군                 서촌                  성수                              신사  \\\n",
       "datetime                                                                     \n",
       "2016-01-01           0    6730685821591931    1454414758112631202345644909   \n",
       "2016-01-02           0   94181036732733102  237152614227111293151147912893   \n",
       "2016-01-03           0    8025876627612817    1557716286179421877572417723   \n",
       "2016-01-04           0  304203307562436219  341783706141271457961572817676   \n",
       "2016-01-05           0  311183374364496225  426774659435296379791666618482   \n",
       "...                ...                 ...                             ...   \n",
       "2020-04-26    81948792   92241025251365471     996910431115201143069567887   \n",
       "2020-04-27  1603016147  322113527082308508  282903056727991298011413215933   \n",
       "2020-04-28  1693916799  319943591288589101  291963187529572313501549417455   \n",
       "2020-04-29  1786318021  328073683996899680  302823323230330336101596718859   \n",
       "2020-04-30  1089611960  128461447972498044   13749150161520416421985111792   \n",
       "\n",
       "지역군                                  신촌                                  연남  \\\n",
       "datetime                                                                      \n",
       "2016-01-01   11610121202951828196389334  1971193563294639611030190661325361   \n",
       "2016-01-02   16311175094324044695528526  2685278981237369761418893113792529   \n",
       "2016-01-03   12676142333469934574441467  2407250062013620361201196069536271   \n",
       "2016-01-04  208792194955692576399561302  4427418873544753441356210774677352   \n",
       "2016-01-05  554145670121920222409141261  4217405475745782921352221577007489   \n",
       "...                                 ...                                 ...   \n",
       "2020-04-26     189271878347735146196184  2306230239297383511256144964286155   \n",
       "2020-04-27   29952311631039510881731921  5001450844201464971368151068247068   \n",
       "2020-04-28  309723224210581110217351023  4967455346375491041490163872757573   \n",
       "2020-04-29  328653506011564117547921115  5202470250189568631650181282618657   \n",
       "2020-04-30     215032240867306896321290  3170273845089494617672792215271702   \n",
       "\n",
       "지역군                                                       을지로  \\\n",
       "datetime                                                        \n",
       "2016-01-01  1377413463102317265137423395641157942487322901...   \n",
       "2016-01-02  1718117849203792433272077249871277793900237407...   \n",
       "2016-01-03  2029293304377935748439804830235288251343153312...   \n",
       "2016-01-04  1011314130361568815517242562399157162575276187...   \n",
       "2016-01-05  5900759288246412445315920156981163913149377933...   \n",
       "...                                                       ...   \n",
       "2020-04-26  1208311487495146592574253921772317106556679310...   \n",
       "2020-04-27  3678638188205252072812607126741022310810253642...   \n",
       "2020-04-28  3784139230208122127213073130611061711122102634...   \n",
       "2020-04-29  3850239975216732203913261132301082811785267322...   \n",
       "2020-04-30  1610615554687668305711592135603947919495172679...   \n",
       "\n",
       "지역군                        이태원  \\\n",
       "datetime                         \n",
       "2016-01-01  484354441891019141   \n",
       "2016-01-02  747183171960123374   \n",
       "2016-01-03  571757491496214050   \n",
       "2016-01-04  600861471301213971   \n",
       "2016-01-05  137441486967646922   \n",
       "...                        ...   \n",
       "2020-04-26   38453870101868961   \n",
       "2020-04-27    4083397484068765   \n",
       "2020-04-28    4304431388379325   \n",
       "2020-04-29  482851271014912539   \n",
       "2020-04-30  443949541084712516   \n",
       "\n",
       "지역군                                                        장충  \\\n",
       "datetime                                                        \n",
       "2016-01-01   616657467491809314221372158815024076324215871591   \n",
       "2016-01-02  9323905010667115542441227923032186219622165327...   \n",
       "2016-01-03  8353806695951045019991943174918291884198349954356   \n",
       "2016-01-04  1585015427158641685645354362402839924255444272...   \n",
       "2016-01-05  1598616983165301585093089777428044834058412546...   \n",
       "...                                                       ...   \n",
       "2020-04-26   699875465343519014811272137014351426147729173704   \n",
       "2020-04-27  1300613334123281202340073509345034693581401969...   \n",
       "2020-04-28  1325113415125161217840453663340435123651407171...   \n",
       "2020-04-29  1384713815129161255440293513356035943716410774...   \n",
       "2020-04-30   887489347208662622431881180218242110226148044968   \n",
       "\n",
       "지역군                                               종로                    청담  \\\n",
       "datetime                                                                     \n",
       "2016-01-01      288947371190811480203661830178757693      6323665046904475   \n",
       "2016-01-02    43797529197362032032017305121143711490    113001239181168903   \n",
       "2016-01-03      310447491176411784224781997174307012      8191891969167203   \n",
       "2016-01-04   444224313631631316939772124951530815169  25591296262706830042   \n",
       "2016-01-05   444054253631529315379981126551569215390  27343306162626930351   \n",
       "...                                              ...                   ...   \n",
       "2020-04-26        1280011769747073932927407164576079      5203554345744904   \n",
       "2020-04-27   257632404122177223779768112931073110891  19048212822296224993   \n",
       "2020-04-28  2554323869229602299110063117191149411207  19216216972320025454   \n",
       "2020-04-29  2733625752236552410910366127521232413068  19344221302323725807   \n",
       "2020-04-30      182181709015193153943994618994339638      7373804960506343   \n",
       "\n",
       "지역군                             한남          혜화                          홍대  \n",
       "datetime                                                                    \n",
       "2016-01-01    45974703302621751397  2809329738  63294639611030190661325361  \n",
       "2016-01-02    30843195493470837392  3672640397  81237369761418893113792529  \n",
       "2016-01-03    58076459241624296824  3076133467  62013620361201196069536271  \n",
       "2016-01-04  3929471048051060611122  4044042077  73544753441356210774677352  \n",
       "2016-01-05  1082611393481348154937  4322244682  75745782921352221577007489  \n",
       "...                            ...         ...                         ...  \n",
       "2020-04-26    43734668172717994325  1672117682  39297383511256144964286155  \n",
       "2020-04-27    83938804405837853721  2510625716  44201464971368151068247068  \n",
       "2020-04-28    87728909409538723625  2766227952  46375491041490163872757573  \n",
       "2020-04-29    91589202423440545526  3013330473  50189568631650181282618657  \n",
       "2020-04-30    58815711235621592323  1907620060  45089494617672792215271702  \n",
       "\n",
       "[1582 rows x 16 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df1 = pd.pivot_table(df,\n",
    "                          index = '사용년월',\n",
    "                          columns = '지역군',\n",
    "                          values = '승하차총승객수',\n",
    "                          aggfunc = 'sum',\n",
    "                          fill_value=0)\n",
    "data_df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "83ff1c6d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:29:07.244485Z",
     "start_time": "2021-10-01T06:29:07.182720Z"
    }
   },
   "outputs": [],
   "source": [
    "data_df1.to_csv('./subway_results.csv',index='사용일자', encoding=\"utf-8-sig\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e331b5ac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:29:09.413633Z",
     "start_time": "2021-10-01T06:29:09.402901Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import matplotlib\n",
    "import seaborn as sns\n",
    "%matplotlib inline "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2b1d267d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:29:11.479695Z",
     "start_time": "2021-10-01T06:29:11.453741Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hangul font is set!\n"
     ]
    }
   ],
   "source": [
    "#한글폰트\n",
    "import platform\n",
    "from matplotlib import font_manager, rc\n",
    "import matplotlib.font_manager as fm\n",
    "\n",
    "plt.rcParams['axes.unicode_minus'] = False\n",
    "\n",
    "if platform.system() == 'Darwin':\n",
    "    f_path = '/Library/Fonts/Arial Unicode.ttf'\n",
    "elif platform.system() == 'Windows':\n",
    "    f_path = 'c:/Windows/Fonts/malgun.ttf'\n",
    "font_name = font_manager.FontProperties(fname=f_path).get_name()\n",
    "rc('font', family=font_name)\n",
    "\n",
    "print('Hangul font is set!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "666a817e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-10-01T06:36:19.841898Z",
     "start_time": "2021-10-01T06:36:19.789379Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1582 entries, 0 to 1581\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype         \n",
      "---  ------   --------------  -----         \n",
      " 0   사용일자     1582 non-null   datetime64[ns]\n",
      " 1   승하차총승객수  1582 non-null   object        \n",
      "dtypes: datetime64[ns](1), object(1)\n",
      "memory usage: 37.1+ KB\n"
     ]
    }
   ],
   "source": [
    "# 사용일자 타입이 int64 \n",
    "# 사용일자 타입 날짜로 변환(int64 -> datetime) \n",
    "subDay['사용일자'] = pd.to_datetime(subDay['사용일자'].astype('str'),errors = 'coerce') \n",
    "subDay.info() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2038b41",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.rc('font', family='Malgun Gothic') \n",
    "fig = plt.figure(figsize=(14,8)) ## 캔버스 생성 \n",
    "fig.set_facecolor('white') ## 캔버스 색상 설정 \n",
    "\n",
    "ax = fig.add_subplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7fbf64b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# plt.figure(figsize=(40,20))\n",
    "# for 지역명 in data:\n",
    "#     sns.lineplot(x=df_month.index , y= place, label=place, data=df_month);\n",
    "# plt.legend(fontsize='x-large', title_fontsize='70')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": true,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "242.667px"
   },
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
